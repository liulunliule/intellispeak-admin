import {
    Table,
    TableBody,
    TableCell,
    TableHeader,
    TableRow,
} from "../ui/table";
import Badge from "../ui/badge/Badge";
import Button from "../ui/button/Button";

export interface Transaction {
    transactionId: number;
    userName: string;
    amount: number;
    currency: string;
    status: "PENDING" | "COMPLETED" | "CANCELLED";
    createdAt: string;
    details: string;
}

interface TransactionTableProps {
    transactions: Transaction[];
    onConfirm: (id: number) => void;
    onCancel: (id: number) => void;
    onViewDetails: (details: string) => void;
}

export default function TransactionTable({
    transactions,
    onConfirm,
    onCancel,
    onViewDetails,
}: TransactionTableProps) {
    const getStatusColor = (status: Transaction['status']) => {
        switch (status) {
            case "COMPLETED":
                return "success";
            case "CANCELLED":
                return "error";
            case "PENDING":
            default:
                return "warning";
        }
    };

    return (
        <div className="overflow-hidden rounded-2xl border border-gray-200 bg-white px-4 pb-3 pt-4 dark:border-gray-800 dark:bg-white/[0.03] sm:px-6">
            <div className="max-w-full overflow-x-auto">
                <Table>
                    <TableHeader className="border-gray-100 dark:border-gray-800 border-y">
                        <TableRow>
                            <TableCell isHeader className="py-3 font-medium text-gray-500 text-start text-xs dark:text-gray-400">
                                Tên người dùng
                            </TableCell>
                            <TableCell isHeader className="py-3 font-medium text-gray-500 text-start text-xs dark:text-gray-400">
                                Số tiền
                            </TableCell>
                            <TableCell isHeader className="py-3 font-medium text-gray-500 text-start text-xs dark:text-gray-400">
                                Loại tiền
                            </TableCell>
                            <TableCell isHeader className="py-3 font-medium text-gray-500 text-start text-xs dark:text-gray-400">
                                Ngày tạo
                            </TableCell>
                            <TableCell isHeader className="py-3 font-medium text-gray-500 text-start text-xs dark:text-gray-400">
                                Trạng thái
                            </TableCell>
                            <TableCell isHeader className="py-3 font-medium text-gray-500 text-start text-xs dark:text-gray-400">
                                Hành động
                            </TableCell>
                        </TableRow>
                    </TableHeader>
                    <TableBody className="divide-y divide-gray-100 dark:divide-gray-800">
                        {transactions.map((transaction) => (
                            <TableRow key={transaction.transactionId} className="relative group">
                                <TableCell className="py-3">
                                    <p
                                        className="font-medium text-blue-600 text-sm dark:text-blue-400 cursor-pointer hover:underline"
                                        onClick={() => onViewDetails(transaction.details)}
                                    >
                                        {transaction.userName}
                                    </p>
                                </TableCell>
                                <TableCell className="py-3 text-gray-500 text-sm dark:text-gray-400">
                                    {transaction.amount.toFixed(2)}
                                </TableCell>
                                <TableCell className="py-3 text-gray-500 text-sm dark:text-gray-400">
                                    {transaction.currency}
                                </TableCell>
                                <TableCell className="py-3 text-gray-500 text-sm dark:text-gray-400">
                                    {new Date(transaction.createdAt).toLocaleDateString()}
                                </TableCell>
                                <TableCell className="py-3">
                                    <Badge size="sm" color={getStatusColor(transaction.status)}>
                                        {transaction.status === "PENDING" && "Đang chờ"}
                                        {transaction.status === "COMPLETED" && "Hoàn thành"}
                                        {transaction.status === "CANCELLED" && "Đã hủy"}
                                    </Badge>
                                </TableCell>
                                <TableCell className="py-3 space-x-2">
                                    {transaction.status === "PENDING" ? (
                                        <>
                                            <Button size="sm" onClick={() => onConfirm(transaction.transactionId)}>
                                                Xác nhận
                                            </Button>
                                            <Button
                                                size="sm"
                                                variant="outline"
                                                onClick={() => onCancel(transaction.transactionId)}
                                            >
                                                Hủy
                                            </Button>
                                        </>
                                    ) : (
                                        <span className="text-gray-500 text-sm">Đã xử lý</span>
                                    )}
                                </TableCell>
                            </TableRow>
                        ))}
                    </TableBody>
                </Table>
            </div>
        </div>
    );
}